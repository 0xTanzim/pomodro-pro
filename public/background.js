import{g as i,s as n,D as f}from"./assets/timer-BQyplqQ0.js";chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"go-to-report",title:"Go to Report Page",contexts:["action"]}),chrome.contextMenus.create({id:"go-to-settings",title:"Go to Settings",contexts:["action"]})});chrome.contextMenus.onClicked.addListener((t,o)=>{t.menuItemId==="go-to-report"&&chrome.tabs.create({url:chrome.runtime.getURL("report.html")}),t.menuItemId==="go-to-settings"&&chrome.tabs.create({url:chrome.runtime.getURL("options.html")})});let a=!1;const m="pomodoro-timer-alarm";function u(){chrome.alarms.create(m,{delayInMinutes:1/60})}function l(){chrome.alarms.clear(m)}function h(){a=!0,l(),u(),console.log("[BG] Timer started (alarms)")}function s(){a=!1,l(),console.log("[BG] Timer stopped (alarms)")}async function g(){try{const t=await i("timerState"),o=await i("timerSettings");if(!t||!t.isRunning||t.time<=0){s();return}const e={...t};e.time-=1,e.focusSeconds+=1,e.totalFocusTime+=1,e.time===0?await S(e,o):await n("timerState",e)}catch(t){console.error("Error in timer tick (alarms):",t),s()}}chrome.alarms.onAlarm.addListener(t=>{t.name===m&&g().then(()=>{a&&u()})});async function S(t,o){const e={...t};if(e.isRunning=!1,t.mode==="focus"){e.pomodoros+=1,e.cycle+=1;const r=e.cycle%4===0?"long_break":"short_break",c=r==="long_break"?o?.longBreakDuration||900:o?.shortBreakDuration||300;if(e.mode=r,e.time=c,o?.notifications)try{await chrome.notifications.create({type:"basic",iconUrl:"icons/icon-128.png",title:"Focus Session Complete! ðŸŽ‰",message:`Great job! You've completed ${e.pomodoros} Pomodoro${e.pomodoros>1?"s":""}. Time for a break!`})}catch(d){console.error("Failed to create notification:",d)}o?.autoStartBreaks&&(e.isRunning=!0)}else{if(e.mode="focus",e.time=o?.focusDuration||1500,o?.notifications)try{await chrome.notifications.create({type:"basic",iconUrl:"icons/icon-128.png",title:"Break Complete! âš¡",message:"Break time is over. Ready to focus again?"})}catch(r){console.error("Failed to create notification:",r)}o?.autoStartPomodoros&&(e.isRunning=!0)}await n("timerState",e)}chrome.storage.onChanged.addListener(async(t,o)=>{if(o==="local"&&t.timerState){const e=t.timerState.newValue;try{e.isRunning&&!a?h():!e.isRunning&&a&&s()}catch(r){console.error("[BG] Error handling timerState change",r,e)}}});chrome.runtime.onMessage.addListener((t,o,e)=>{if(t.type==="GET_TIMER_STATE")return i("timerState").then(e),!0;if(t.type==="UPDATE_TIMER_STATE")return n("timerState",t.state).then(()=>e({success:!0})),!0;if(t.type==="RESET_TIMER")return i("timerSettings").then(async r=>{const c={...f,time:r?.focusDuration||1500,todos:(await i("timerState"))?.todos||[]};await n("timerState",c),e({success:!0})}),!0});chrome.runtime.onSuspend.addListener(()=>{l()});
